{"version":3,"sources":["webpack:///src/app/pages/login/components/input/input.component.html","webpack:///src/app/pages/login/login.page.html","webpack:///src/app/Shared/Services/Loader/loading.service.ts","webpack:///src/app/pages/login/components/input/input.component.scss","webpack:///src/app/pages/login/components/input/input.component.ts","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["LoadingService","loadingController","create","message","spinner","duration","loader","present","dismiss","providedIn","InputComponent","value","control","setValue","validators","setValidators","selector","template","routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","auth","router","http","toast","loginStage","email","emailValidators","compose","required","otp","randomOtp","Math","round","random","console","log","authenticate","simpletoast","login","then","user"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <ion-item>\\n    <ion-input [placeholder]=\\\"placeholder\\\" [formControl]=\\\"control\\\"></ion-input>\\n  </ion-item>\\n</ion-content>\";","export default \"<ion-content class=\\\"displayContents\\\">\\n  <div class=\\\"login-form\\\">\\n      <app-input *ngIf=\\\"loginStage == 1\\\" [validators]=\\\"emailValidators\\\" [control]=\\\"email\\\" placeholder=\\\"Email\\\"></app-input>\\n\\n      <app-input *ngIf=\\\"loginStage == 2\\\" [validators]=\\\"otpValidator\\\" [control]=\\\"otp\\\" max=\\\"6\\\" placeholder=\\\"OTP\\\"></app-input>\\n      <p class=\\\"ion-text-end\\\" *ngIf=\\\"loginStage == 2\\\" (click)=\\\"resendOtp()\\\">Resend OTP</p>\\n      \\n      <ion-button (click)=\\\"login()\\\" color=\\\"primary\\\" expand=\\\"block\\\">{{ loginStage == 1 ? 'Send OTP' : 'Submit' }}</ion-button>\\n    </div>\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public loader: any;\n  constructor(\n    public loadingController: LoadingController,\n  ) {\n  }\n\n  async create() {\n    this.loader = await this.loadingController.create({\n      message: 'Please wait...',\n      spinner: 'crescent',\n      duration: 2000\n\n    });\n    return this.loader.present();\n  }\n\n  async dismiss() {\n    this.loader.dismiss();\n  }\n}\n","export default \"ion-input {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vY29tcG9uZW50cy9pbnB1dC9pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbi9jb21wb25lbnRzL2lucHV0L2lucHV0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWlucHV0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\";","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent implements OnInit {\n  @Input('placeholder') placeholder: String;\n  @Input('validators') validators\n  @Input('value') value: String;\n  @Input('control') control: FormControl;\n  \n  constructor() { }\n\n  ngOnInit() {\n    if(this.value)\n      this.control.setValue(this.value)\n\n    if(this.validators)\n      this.control.setValidators(this.validators)\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { InputComponent } from './components/input/input.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { AuthService } from './../../Shared/Services/Authentication/auth.service';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    LoginPage,\n    InputComponent\n  ]\n})\nexport class LoginPageModule {}\n","export default \".login-form {\\n  display: block;\\n  height: 6%;\\n  margin-top: 75%;\\n  width: 70%;\\n  margin-left: 15%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLFVBQUE7RUFDQSxlQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybXtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDYlO1xuICAgIG1hcmdpbi10b3A6IDc1JTtcbiAgICB3aWR0aDogNzAlO1xuICAgIG1hcmdpbi1sZWZ0OiAxNSU7XG59Il19 */\";","import { FormControl, Validators } from \"@angular/forms\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"./../../Shared/Services/Authentication/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { HttpService } from \"src/app/Shared/Services/HttpService/http.service\";\nimport { User } from \"src/app/Shared/Models/user\";\nimport { LoadingService } from 'src/app/Shared/Services/Loader/loading.service';\nimport { ToastService } from 'src/app/Shared/Services/Toast/toast.service';\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.page.html\",\n  styleUrls: [\"./login.page.scss\"],\n})\nexport class LoginPage implements OnInit {\n  loginStage = 1;\n  email = new FormControl();\n  emailValidators = Validators.compose([Validators.required]);\n\n  protected user: User;\n  protected otp = new FormControl();\n  protected randomOtp: Number;\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private http: HttpService,\n    private loader: LoadingService,\n    private toast: ToastService\n  ) {}\n\n  ngOnInit() {}\n\n  login() {\n    if (this.loginStage == 1) {\n      this.randomOtp = Math.round(Math.random() * 1000);\n      console.log(this.randomOtp);\n      this.authenticate()\n    } else {\n      if (this.otp.value == this.randomOtp) {\n        this.auth.authenticate();\n      } else {\n        this.toast.simpletoast('Invalid OTP')\n      }\n    }\n  }\n\n  authenticate(){\n    this.loader.create();\n    this.auth.login(this.email.value, this.randomOtp).then((user: User) => {\n      this.loader.dismiss();\n      this.user = user;\n      this.loginStage = 2;\n    });\n  }\n\n  resendOtp(){\n    this.randomOtp = Math.round(Math.random() * 1000);\n    this.authenticate()\n  }\n}\n"]}